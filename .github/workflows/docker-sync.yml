name: Docker image sync

on:
  repository_dispatch:
  push:
    branches:
      - release1/*
    tags:
      - "v*"   #Push events to matching v*,i.e. v1.0 v20.15.10
  workflow_dispatch:
    inputs:
      image_name:
        type: string
        description: image name (jenkins)
        required: true
      pull_url:
        type: string
        description: pull url (jenkins/jenkins)
        required: true
      image_version:
        type: string
        description: image version (2.478-jdk17)
        required: true
env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  
concurrency:
  group: ci-buildtrain-${{ github.ref }}-sync-v1
  cancel-in-progress: true

jobs:
  # 启动
  sync:
    runs-on: ubuntu-latest
    outputs:
      matrix: '["generate_image", "generate_debpackage"]'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: repository
          submodules: true
      - name: Docker version
        shell: bash
        run: |
          # Clean up workspace
          path="${{ github.workspace }}/repository/src/workspace"
            
          docker --version
          docker compose version
      - name: List image all tag
        shell: bash
        run: |
          repo_url=https://registry.hub.docker.com/v2/repositories/library
          curl -L -s ${repo_url}/${{ github.event.inputs.image_name }}/tags?page_size=100 | jq '."results"[]["name"]'
          # curl -s 'https://registry.hub.docker.com/v2/repositories/library/${{ github.event.inputs.image_name }}/tags/' | jq '."results"[]["name"]'
      - name: Check docker image
        shell: bash
        run: |
          docker pull ${{ github.event.inputs.pull_url }}:${{ github.event.inputs.image_version }}
          docker images
      - name: Export docker image
        shell: bash
        run: |
          docker image save -o ${{ github.event.inputs.image_name }}-${{ github.event.inputs.image_version }}.img ${{ github.event.inputs.pull_url }}:${{ github.event.inputs.image_version }}
          
          # echo "=== load image $1 ==="
          # docker load -i ${{ github.event.inputs.image_name }}-${{ github.event.inputs.image_version }}.img
          
      # 上传img.xz文件
      - name: Upload docker image
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.image_name }}-${{ github.event.inputs.image_version }}.img
          path: ${{ github.event.inputs.image_name }}-${{ github.event.inputs.image_version }}.img
          retention-days: 1
 
